/*

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/
module derelict.sfml2.systemtypes;

// Config.h
enum CSFML_VERSION_MAJOR = 2;
enum CSFML_VERSION_MINOR = 0;

alias int sfBool;
enum sfFalse = 0;
enum sfTrue = 1;

alias byte sfInt8;
alias ubyte sfUint8;
alias short sfInt16;
alias ushort sfUint16;
alias int sfInt32;
alias uint sfUint32;
alias long sfInt64;
alias ulong sfUint64;

// System/Types.h
struct sfClock;
struct sfMutex;
struct sfThread;

// System/InputStream.h
extern(C)
{
    alias nothrow sfInt64 function(void*,sfInt64,void*) sfInputStreamReadFunc;
    alias nothrow sfInt64 function(sfInt64,void*) sfInputStreamSeekFunc;
    alias nothrow sfInt64 function(void*) sfInputStreamTellFunc;
    alias nothrow sfInt64 function(void*) sfInputStreamGetSizeFunc;
}

struct sfInputStream
{
    sfInputStreamReadFunc read;
    sfInputStreamSeekFunc seek;
    sfInputStreamTellFunc tell;
    sfInputStreamGetSizeFunc getSize;
    void* userData;
}

// System/Time.h
struct sfTime
{
    sfInt64 microseconds;
}

immutable(sfTime) sfTime_Zero;

// System/Vector2.h
struct sfVector2i
{
    int x;
    int y;
}

struct sfVector2u
{
    uint x;
    uint y;
}

struct sfVector2f
{
    float x;
    float y;
}

// System/Vector3.h
struct sfVector3f
{
    float x;
    float y;
    float z;
}